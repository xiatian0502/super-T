name: all

on:
    schedule:
        - cron: '0 */6 * * *'
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
              python-version: '3.x'

        - name: Install dependencies
          run: pip install opencv-python requests

        - name: Run my script
          run: python ${{ github.workspace }}/mytvsp.py

        - name: Configure git for main repo
          run: |
            git config --local user.email "gxia7466@gmail.com"
            git config --local user.name "xiatian0502"

        - name: Commit and push changes if any
          run: |
            git add *.txt *.m3u
            git commit -m "Automatic update" || echo "No changes to commit"
            git pull origin main --rebase
            git push origin main

        - name: Clone target repo
          run: |
            git clone https://xiatian0502:${{ secrets.PUBLIC0PLAYLIST }}@github.com/xiatian0502/public-playlist.git
            cd public-playlist
            git checkout -b update-mytvfree || git checkout update-mytvfree
            cp ../mytvfree.m3u .

        - name: Configure git for target repo
          working-directory: public-playlist
          run: |
            git config --local user.email "gxia7466@gmail.com"
            git config --local user.name "xiatian0502"

        - name: Stage changes before pull
          working-directory: public-playlist
          run: git add . || echo "Nothing to add"

        - name: Stash uncommitted changes
          working-directory: public-playlist
          run: git stash || echo "Nothing to stash"

        - name: Pull and rebase changes (target repo)
          working-directory: public-playlist
          run: git pull origin update-mytvfree --rebase || (git rebase --abort && git pull origin update-mytvfree --rebase)

        - name: Apply stashed changes
          working-directory: public-playlist
          run: git stash pop || echo "Nothing to apply"

        - name: Resolve conflicts if any
          working-directory: public-playlist
          run: |
            if git ls-files -u | grep mytvfree.m3u; then
              git checkout --theirs mytvfree.m3u
              git add mytvfree.m3u
              git commit -m "Resolved conflict in mytvfree.m3u with theirs"
            fi

        - name: Commit and push changes
          working-directory: public-playlist
          run: |
            git add mytvfree.m3u
            git commit -m 'Update mytvfree.m3u' || echo "No changes to commit"
            git push origin update-mytvfree
